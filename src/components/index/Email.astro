---
interface Props {
    email: string;
}

const { email } = Astro.props;

function encrypt(email: string) {
    const pi = '314159265';
    let encrypted = '';
    for (let i = 0; i < email.length; i++)
        encrypted += String.fromCharCode(
            email.charCodeAt(i) + parseInt(pi[i % pi.length])
        );

    return encrypted;
}

function junk(email: string): string {
    let html = '';
    for (let i = 0; i < email.length; i++) {
        html += `<span>${email[i]}</span>`;
        for (let j = 0; j < Math.random() * 3 + 1; j++)
            html += `<span class="hidden">${String.fromCharCode(Math.floor(Math.random() * 26) + 97)}</span>`;
    }

    return html;
}
---

<a data-encrypted-email={encrypt(email)} set:html={junk(email)} />
<script>
    function decrypt(encryptedEmail: string) {
        const pi = '314159265';
        let decrypted = '';
        for (let i = 0; i < encryptedEmail.length; i++)
            decrypted += String.fromCharCode(
                encryptedEmail.charCodeAt(i) - parseInt(pi[i % pi.length])
            );

        return decrypted;
    }

    const emails = document.querySelectorAll('[data-encrypted-email]');
    emails.forEach((email) => {
        if (!(email instanceof HTMLAnchorElement)) return;
        const decrypted = decrypt(email.dataset.encryptedEmail as string);
        email.innerHTML = decrypted;
        email.href = `mailto:${decrypted}`;
        email.removeAttribute('data-encrypted-email');
    });
</script>
